@import '~terra-mixins';

// Section Header
// ========================================================
:local {
  .section-header {
    background-color: #e8e9ea;
    border-bottom: 1px solid #c8cacb;
    padding-bottom: 0.5rem;
    padding-left: 0.7142857143rem;
    padding-top: 0.5rem;
    width: 100%;
  }

  .title {
    color: #1c1f21;
    font-size: 1rem;
    font-size: var(--terra-section-header-font-size, 1rem);
    font-weight: var(--terra-section-header-font-weight, bold);
    line-height: var(--terra-section-header-line-height, 1.142857143);
    margin: 0;
    padding: 0;
    width: 100%;
    word-break: break-all;
    word-wrap: normal;
  }

  .is-collapsible {
    align-items: center;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    padding-left: 0.5rem;
    width: 100%;

    &.section-header:focus {
      background-color: var(--terra-list-item-focus-background-color, #e8e9ea);
      box-shadow: var(--terra-list-section-header-focus-box-shadow, 0 0 1px 3px rgba(76, 178, 233, 0.5), 0 0 7px 4px rgba(76, 178, 233, 0.35));
      outline: var(--terra-list-section-header-focus-outline, none);
      position: relative;
      z-index: 1;
    }
  
    &.section-header:hover,
    &.section-header:active {
      background-color: #d7d8d9;
    }

    &[data-focusable='false']:focus {
      box-shadow: none !important;
    }
  }

  .item-fill {
    flex: 1 1 auto;
    min-width: 0;
    width: 100%;
  }

  .item-start {
    flex: 0 0 auto;
    padding-right: 0.3571228571rem;
  }

  .accordion-icon {
    background: var(--terra-list-section-header-accordion-icon, inline-svg('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 48 48" enable-background="new 0 0 48 48" xml:space="preserve"><title>0023_caretRight_a</title><path id="caretRight" d="M12,0l24,24L12,48V0z"/></svg>'));
    background-repeat: no-repeat;
    background-size: contain;
    display: block;
    height: 0.8571428571rem;
    transform: rotate(0deg);
    width: 0.8571428571rem;

    // flips the icon about its vertical axis, presenting it in its mirrored-image form
    [dir=rtl] & {
      transform: scaleX(-1);
    }

    // tells the rtl postcss plugin to not transform this by default
    [dir] &.is-open {
      transform: rotate(90deg);
    }
  }
}
